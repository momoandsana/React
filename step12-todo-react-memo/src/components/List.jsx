import React, { useState } from 'react';
import "./List.css";
import TodoItem from './TodoItem';
import { useMemo } from '../../node_modules/.vite/deps_temp_4781c701/chunk-REFQX4J5';


const List = ({ todos, onUpdate, onDelete }) => { // props Íµ¨Ï°∞ Î∂ÑÌï¥
    const [search, setSearch] = useState("");

    // todosÍ∞Ä Î∞∞Ïó¥Ïù∏ÏßÄ ÌôïÏù∏ÌïòÎäî Î∞©Ïñ¥ ÏΩîÎìú Ï∂îÍ∞Ä
    if (!Array.isArray(todos)) {
        console.error("Error: todos is not an array", todos);
        return null; // ÎòêÎäî ÏóêÎü¨ Î©îÏãúÏßÄÎ•º Î≥¥Ïó¨Ï§Ñ Ïàò ÏûàÏäµÎãàÎã§.
    }

    // Í≤ÄÏÉâÏñ¥Î•º ÏûÖÎ†•ÌñàÏùÑ Îïå Í≤ÄÏÉâÏñ¥Î•º Ìè¨Ìï®Ìïú todos Ï†ïÎ≥¥ Ï°∞Ìöå
    const getFilterData=()=>{
     if(search==="")return todos;

     const searchedTodos
     =todos.filter((todo)=>todo.content.toLowerCase().includes(search.toLowerCase()));
     return searchedTodos;
    }

    const filteredTodos=getFilterData();// lIst Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä Î¶¨ÎûúÎçîÎßÅ Îê† ÎïåÎßàÎã§

    // const getAnalyzedData=()=>{
    //     console.log("getAnalyzedData call...");

    //     const totalCount=todos.length;
    //     const doneCount=todos.filter((todo)=>todo.isDone).length;
    //     const notDoneCount=totalCount-doneCount;

    //     return {totalCount,doneCount,notDoneCount};
    // }

    // const{totalCount,doneCount,notDoneCount}=getAnalyzedData();

    const { totalCount, doneCount, notDoneCount } = useMemo(() => {
        console.log("getAnalyzedData call...");// useMemo Î•º ÏÇ¨Ïö©ÌïòÎ©¥ Í≤ÄÏÉâÏùÑ ÌïòÎ©¥ ÌïÑÏöîÏóÜÎäî Ìï®ÏàòÎì§Ïù¥ Ìò∏Ï∂úÎêòÏßÄ ÏïäÎäîÎã§
    
        const totalCount = todos.length;
        const doneCount = todos.filter((todo) => todo.isDone).length;
        const notDoneCount = totalCount - doneCount;
    
        return { totalCount, doneCount, notDoneCount };
    }, [todos]); // todosÍ∞Ä Î≥ÄÍ≤ΩÎê† ÎïåÎßå Í≥ÑÏÇ∞
    

    return (
        <div className="List">
            <h4>ToDo List üò∏</h4>
            <div>
                <div>total : {totalCount}</div>
                <div>doneCount : {doneCount}</div>
                <div>notDoneCount : {notDoneCount}</div>
            </div>
            <input
                placeholder='Í≤ÄÏÉâÏñ¥Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.'
                value={search}
                onChange={(e) => setSearch(e.target.value)}
            />

            <div className="todos_wrapper">
                {
               //  todos.map((todo) => (
                    filteredTodos.map((todo) => (
                    <TodoItem key={todo.id} {...todo} onUpdate={onUpdate} onDelete={onDelete} />
                ))}
            </div>
        </div>
    );
};

export default List;
